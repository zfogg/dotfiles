[user]
    email = me@zfo.gg
    name  = Zachary Fogg

[core]
    ;editor   = $EDITOR
    ;pager    = $PAGER
    eol      = lf
    autocrlf = input
    excludesfile = ~/.gitignore_global

[push]
    default = simple

[color]
    ui    = true
    pager = no

[fetch]
    prune     = true
    pruneTags = true
    output    = compact

[log]
    decorate = true
    abbrevCommit = true


[filter "media"]
    clean  = git-media-clean %f
    smudge = git-media-smudge %f


[merge]
    tool          = vimdiff
[mergetool "vimdiff"]
    cmd           = $EDITOR -d \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\" -c '$wincmd w' -c 'wincmd J'
    trustExitCode = true
[mergetool]
    prompt        = true
    keepBackup    = false

;[merge]
	;tool          = diffconflicts
;[mergetool "diffconflicts"]
	;cmd           = vim -c DiffConflicts \"$MERGED\" \"$BASE\" \"$LOCAL\" \"$REMOTE\"
	;trustExitCode = true
;[mergetool]
	;prompt        = true
	;keepBackup    = false

[diff]
    tool = vimdiff
[difftool "vimdiff"]
    cmd = \"$EDITOR\" -d \"$BASE\" \"$LOCAL\" \"$REMOTE\" \"$MERGED\" -c '$wincmd w' -c 'wincmd J'
[difftool]
    prompt = false
[difftool "vimdiff"]
    cmd = nvim -d $BASE $LOCAL $REMOTE $MERGED -c '$wincmd w' -c 'wincmd J'


[alias]
    submsync = submodule foreach \"git checkout master && git pull origin master\"
    mybranch = rev-parse --abbrev-ref HEAD
    up       = pull --rebase --autostash
    gh       = joopal-clone git github.com

    l        = log -18 --color=always --all --topo-order --pretty='format:%Cgreen%h%Creset %s%Cred%d%Creset %C(black bold)(by %an)%Creset'
    ll       = log     --color=always --all --topo-order --pretty='format:%Cgreen%h%Creset %s%Cred%d%Creset %C(black bold)(by %an)%Creset'
    gl       = log -12 --color=always --all --graph --topo-order --pretty='format:%Cgreen%h%Creset %s %C(black bold)(by %an)%Creset%C(yellow bold)%d%Creset%n'
    gll      = log     --color=always --all --graph --topo-order --pretty='format:%Cgreen%h%Creset %s %C(black bold)(%cr by %an)%Creset%C(yellow bold)%d%Creset%n'

    unshallow = "!:; \
    	git fetch --unshallow 2>/dev/null; \
    	git config remote.origin.fetch '+refs/heads/*:refs/remotes/origin/*'; \
    	git fetch -v origin; "

    pruner = "!:; \
    	git prune --expire=now; \
    	git reflog expire --expire-unreachable=now --rewrite --all; "

    fetch-branch = "!:; \
    	git remote set-branches --add origin $1; \
    	git fetch -v origin $1:$1; "


[ghq]
    root = ~/zfogg/src
[ghq "https://bitbucket.org/"]
    vcs = git
[filter "lfs"]
    clean = git-lfs clean -- %f
    smudge = git-lfs smudge -- %f
    process = git-lfs filter-process
    required = true
[grep]
    lineNumber = true

