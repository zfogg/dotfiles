#/usr/bin/env zsh
# vim: ft=zsh foldmethod=marker:


# {{{ asdf
# INFO:  https://github.com/asdf-community/asdf-direnv#setup
# INFO: DEPRECATED
#source "$(asdf direnv hook asdf)"
# Uncomment the following line to make direnv silent by default.
# export DIRENV_LOG_FORMAT=""
# }}}


# {{{ Node.js
# INFO: https://github.com/direnv/direnv/wiki/Node#using-nvm
function use_nvm() {
  local node_version=$1
  unset npm_config_prefix

  nvm_sh=~/.nvm/nvm.sh
  if [[ -e $nvm_sh ]]; then
    source $nvm_sh
    nvm use $node_version
  fi
}
# }}}


# {{{ Python
# INFO: @zfogg remix
use_python() {
  if [ -n "$(which asdf)" ]; then
    local pyversion=$1
    asdf local python ${pyversion}
  fi
}

layout_virtualenv() {
  local pyversion=$1
  local pvenv=$2
  if [[ -n $(which asdf virtualenv) ]]; then
    asdf exec virtualenv --quiet ${pyversion} ${pvenv}-${pyversion}
  fi
  #asdf local --unset
}

# INFO: u rly only need this lol
layout_activate() {
  local envbin="${PWD:-.}/env/bin"
  if [[ -d $envbin ]]; then
    source "$envbin/activate"
  fi
  unset PS1
}

# INFO: https://github.com/direnv/direnv/wiki/Python#pyenv-virtualenv
#function use_python() {
#  if [ -n "$(which pyenv)" ]; then
#    local pyversion=$1
#    pyenv local ${pyversion}
#  fi
#}
#
#function layout_virtualenv() {
#  local pyversion=$1
#  local pvenv=$2
#  if [ -n "$(which pyenv virtualenv)" ]; then
#    pyenv virtualenv --force --quiet ${pyversion} ${pvenv}-${pyversion}
#  fi
#  pyenv local --unset
#}
#
#function layout_activate() {
#  if [ -n "$(which pyenv)" ]; then
#    source $(pyenv root)/versions/$1/bin/activate
#  fi
#}
# }}}


# {{{ Ruby
# INFO: https://github.com/direnv/direnv/wiki/Ruby
function use_ruby() {
  local ruby_root=$HOME/.rubies/$1
  load_prefix "$ruby_root"
  layout_ruby
}
# }}}
