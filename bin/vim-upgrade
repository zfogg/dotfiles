#!/usr/bin/env zsh -e
# ~/bin/vim-upgrade
#   upgrades editor binaries, dependencies, and plugins
#
#   NOTE: $0 = ~/bin/vim-upgrade


autoload -Uz bin-abort ba-err echoer
trap 'bin-abort' ERR


function() { # Python
    local pip_reqs="${PYENV_ROOT}/neovim-packages"
    eval "$(pyenv init -)"

    for py_v in 2 3; do
    #for py_v in 3; do
        pyenv activate "neovim${py_v}"
        pip install -U wheel setuptools pip
        pip install -U -r "${pip_reqs}${py_v}"
    done

    pyenv deactivate
}


function() { # Rust
    local cargo_rels=(
        stable
        nightly
    )

    local cargo_reqs=(
        racer
        clippy
    )

    for rel in $cargo_rels; do
        rustup update "$rel"
        for req in $cargo_reqs; do
            cargo +"$rel" install "$req" \
                2>/dev/null || true
        done
    done
}


function() { # Node.js
    local npm_reqs=(
        jsonlint
        tern
    )
    . "${BREW}/opt/nvm/nvm.sh"

    nvm install stable \
        --latest-npm
    nvm alias default stable
}


function() { # Golang
    local goget_reqs=(
        github.com/nsf/gocode
    )

    for r in ${goget_reqs}; do
        go get -u "$r"
    done
}


function() { # Editor
    # NOTE: build/install editor binaries last
    local brew_reqs=(
        #vim
        neovim
    )
    brew update

    for r in ${brew_reqs}; do
        brew upgrade "$r" || true
    done
}


function() { # Editor Plugins
    local editor="${EDITOR:-nvim}"

    $editor +PlugUpgrade +qall
    $editor +PlugClean +PlugInstall +qall
    $editor +PlugUpdate
}

