#!/usr/bin/env zsh -e


autoload -Uz bin-abort ba-err echoer
trap 'bin-abort' ERR


function() { # Python, Pyenv, pip
    eval "$(pyenv init -)" #; eval "$(pyenv virtualenv-init -)"
    local pip_reqs="${XDG_CONFIG_HOME:-~/.config}/pyenv/neovim-packages"

    pyenv activate 'neovim'
    pip install -U wheel setuptools
    pip install -U pip
    pip install -U -r "$pip_reqs"

    pyenv deactivate
}


function() { # Node.js, npm, nvm
    local npm_reqs=(
        jsonlint
        tern
        neovim)
    npm --silent install --global ${npm_reqs}

    #nvm install stable \
        #--latest-npm
    #nvm alias default stable
}


function() { # Rust, rustup, Cargo
    local cargo_reqs=(
        racer clippy)
    for rel in $cargo_rels; do
        rustup update "$rel"
        for req in $cargo_reqs; do
            cargo +"$rel" install "$req" \
                2>/dev/null || true
        done
    done

    local ru_comps=(
        clippy rustfmt rls rust-src rust-analysis)
    for x in $ru_comps; do
        rustup component add $x || rustup component add $x-preview
    done
}


function() { # Ruby, Gem
    local gem_reqs=(
        neovim
    )
    for r in ${gem_reqs};
        gem install "$r"
}


function() { # Golang
    local goget_reqs=(
        github.com/nsf/gocode
    )
    for r in ${goget_reqs};
        go get -u "$r"
}


# NOTE: build/install editor binaries last
function() { # OS package manager
    # OSX
    if [[ $OSTYPE =~ "darwin" ]]; then
        local brew_reqs=(
            #vim
            neovim)
        for r in ${brew_reqs};
            brew ls --versions "$r" > /dev/null \
                || brew install "$r"

    # Manjaro (Arch-based)
    elif [[ -f /etc/manjaro-release ]]; then
        local pamac_reqs=(
            neovim-nightly)
        for r in ${pamac_reqs};
            echo "> pamac reinstall ${r}"
            #pacman -Q "$r" || pamac reinstall "$r"
    fi
}


function() { # Editor Plugins
    local editor="${EDITOR:-nvim}"

    $editor +PlugUpgrade +qall
    $editor +PlugClean +PlugInstall +qall
    $editor +PlugUpdate
}

