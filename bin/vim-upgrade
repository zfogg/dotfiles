#!/usr/bin/zsh -e


autoload -Uz bin-abort ba-err echoer
trap 'bin-abort' ERR


eval "$(pyenv init -)"
local pip_reqs="${PYENV_ROOT}/neovim-packages"
for py_v in 2 3; do
#for py_v in 3; do
    pyenv activate neovim"$py_v"
    pyenv exec pip install --quiet --requirement "${pip_reqs}${py_v}"
done

    for py_v in 2 3; do
    #for py_v in 3; do
        pyenv activate "neovim${py_v}"
        pip install -U wheel setuptools pip
        pip install -U -r "${pip_reqs}${py_v}"
    done

    pyenv deactivate
}


local npm_reqs=(
    jsonlint
    tern
    neovim
)
npm --silent install --global ${npm_reqs}

    local cargo_reqs=(
        racer
        clippy
    )

    for rel in $cargo_rels; do
        rustup update "$rel"
        for req in $cargo_reqs; do
            cargo +"$rel" install "$req" \
                2>/dev/null || true
        done
    done
}


local gem_reqs=(
    neovim
)
for r in ${gem_reqs}; do
    gem install "$r"
done


# compile editor binaries last
#brew update
#brew upgrade vim    || true
#brew upgrade neovim || true

    nvm install stable \
        --latest-npm
    nvm alias default stable
}


function() { # Golang
    local goget_reqs=(
        github.com/nsf/gocode
    )

    for r in ${goget_reqs}; do
        go get -u "$r"
    done
}


function() { # Editor
    # NOTE: build/install editor binaries last
    local brew_reqs=(
        #vim
        neovim
    )
    brew update

    for r in ${brew_reqs}; do
        brew upgrade "$r" || true
    done
}


function() { # Editor Plugins
    local editor="${EDITOR:-nvim}"

    $editor +PlugUpgrade +qall
    $editor +PlugClean +PlugInstall +qall
    $editor +PlugUpdate
}

