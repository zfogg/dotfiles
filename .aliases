#!/usr/bin/env zsh -e
#   ~/.dotfiles/.aliases


alias rm='trash'

alias vim='$EDITOR'
alias  vi='$EDITOR'
alias   v='$EDITOR'

[[ "$OSX" == "$TRUE" ]] \
    && alias python3="python3.6.2" \
    || alias python3="python3.7.4"

alias zshrc='$EDITOR '"$DOTFILES"'/.zshrc'
alias vimrc='$EDITOR '"$DOTFILES"'/.vim/vimrc'

alias ql='quick-look'
 
[[ "$OSX" == "$TRUE" ]] \
    && alias ls='gls --color=auto --group-directories-first --human-readable --reverse --classify --quoting-style=shell-always' \
    || alias ls='ls --color=auto --group-directories-first'
alias  k='ls -LhGstcr'
alias  l='k -1'
alias ll='l -A'
alias la='ll -g'

alias sudo='nocorrect sudo -E '

alias   s='sudo'

alias ..='cd ..'
alias ...='cd ../..'

alias less='$PAGER'
alias zless='$PAGER'

alias htop='htop -u $USER'

alias ghclone='cd "$(git gh `pbpaste | tr "'"/"'" "'"  "'"`)" && :'

alias  rg='command $GREPPRG'
alias grep='command $GREPPRG'
#alias ag="$GREPPRG"

# pip2 install pygments
#alias ccat='pygmentize -O style=base16-default.dark -f 256 -g'
alias ccat='pygmentize -O style=monokai -f 256 -g'
alias c='ccat'


[[ "$OSX" == "$TRUE" ]] \
    && alias ping='grc ping -C -c 3 -i 0.2 -W 5000 -t 5 -Q' \
    || alias     ping='ping    -c 3'

alias fs='du -shL'

#alias make_='/usr/bin/make -j`sysctl -n hw.ncpu`'
#alias makefast='colormake-short -j`sysctl -n hw.ncpu`'
#alias make='colormake-short'
#
#alias m='make'
#alias mc='make clean'
#alias mt='make test'
#alias M='make clean && make all'
#alias MM='make clean && make test'

alias idea='$EDITOR ~/Dropbox/ideas.md'

alias colortest='~/.config/base16-shell/colortest'

function pyeve() { eval "`~/bin/pyeve ${1:-';'}`" }

alias chmod='command -p chmod'
alias chown='command -p chown'
alias chgrp='command -p chgrp'


# shell output line wrapping
alias wrapoff='tput rmam'
alias  wrapon='tput smam'


# git
alias gca='git commit -a'
alias gc='git commit'
alias gd='git diff'
alias gl='git log'
alias gp='git push'
alias grv='git remote -v'
alias gst='git status'


if [[ "${OSX:-0}" == "${TRUE:-1}" ]]; then
    alias get='ghq get -u -p --shallow "`pbpaste`"; echo'
else
    alias get='ghq get -u -p --shallow "`xclip -out`"; echo'
fi


alias tree='tree --du --si --filelimit 512 -I "node_modules|bower_components|vendor|bundle|target|build|public" -L 5'


alias phpcs='phpcs --standard=ruleset.xml --extensions=php --ignore=node_modules,bower_components,vendor -n -s'


function echoer() {
    printf "%s\n" "$*" >&2;
}


function gencomp_all() {
    for p in $path; do command -p ls $p; done |\
        uniq |\
        { while read c; do gencomp $c; done }
}


function trnl() {
    tr "${1:-':'}" '\n'
}

function mktempf() {
    fpref="${DOTFILES_PACKAGE:-"$USER"_`basename $SHELL`}"
    tempf="${fpref}.${1:-$0}.XXXX"
    mktemp -t "${tempf}" 2>/dev/null || (
        read -d '' errmsg<<-"EOF"
			%s - error
			    \$TMPDIR = "%s"
			    \$tempf  = "%s"
		EOF
        echo "$0" "$TMPDIR" "$tempf" | echoer
    )
}

function ppvar() {
    tempf=`mktempf`
    exec 3>&2 2>$tempf
    var_name=`echo "${1:-PATH}" | tr -d '$'`
    echoer "$0"' - pretty print shell env vars'
    echoer $'\tvar name\t-> '"$var_name"''
    plines=$(eval echo \${$var_name} | trnl "${2:-':'}")
    echoer $'\titem count\t-> '"$(echo "$plines" | wc -l)"
    echo "$plines"
    exec 2>&3 3>&-
    xargs -0 printf '\n%s\n' >&2 < $tempf
}


function npm-do {
    (PATH=$(npm bin):$PATH; eval $@;)
}


# pyenv
function gpip()  {PIP_REQUIRE_VIRTUALENV='' pip  "$@"}
function gpip2() {PIP_REQUIRE_VIRTUALENV='' pip2 "$@"}
function gpip3() {PIP_REQUIRE_VIRTUALENV='' pip3 "$@"}

alias pyenv-init='eval "$(pyenv init -)"; eval "$(pyenv virtualenv-init -)"'
